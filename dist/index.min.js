export default class Animere{constructor({prefix:e="animere",offset:t=.2,watchDOM:i=!1}={}){if(this.prefix=e,this.offset=t,!this.prefersReducedMotion()&&!this.isCrawler()){for(const e of document.querySelectorAll(`[data-${this.prefix}]`))this.onIntersection(e);i&&window.addEventListener("DOMContentLoaded",(()=>{this.onMutations()}))}}prefersReducedMotion(){return window.matchMedia("(prefers-reduced-motion: reduce)").matches}isCrawler(){return!("onscroll"in window)||/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent)}animateCSS(e,t,i="animate__"){return new Promise(((s,r)=>{const n=[`${i}animated`,`${i}${t}`];e.classList.add(...n),e.addEventListener("animationend",(()=>{e.classList.remove(...n),s()}),{once:!0})}))}intersectionObserverCallback(e,t){for(const i of e){if(!i.isIntersecting)continue;const e=i.target;Object.keys(e.dataset).filter((e=>e!==this.prefix&&e.startsWith(this.prefix))).forEach((t=>{const i=t.slice(this.prefix.length).toLowerCase(),s=`--animate-${i}`;"delay"===i&&(e.style.animationDelay=`var(${s})`),"repeat"===i&&(e.style.animationIterationCount=`var(${s})`),e.style.setProperty(s,e.dataset[t])})),e.style.visibility="visible",this.animateCSS(e,e.dataset[this.prefix]),t.unobserve(e)}}onIntersection(e){e.style.visibility="hidden";new IntersectionObserver(this.intersectionObserverCallback.bind(this),{root:null,rootMargin:"0px",threshold:this.offset}).observe(e)}onMutations(){new MutationObserver((e=>{for(const t of e){const e=t.addedNodes;e&&Array.from(e).filter((e=>1===e.nodeType&&this.prefix in e.dataset)).forEach((e=>{this.onIntersection(e)}))}})).observe(document.body,{childList:!0,subtree:!0})}}